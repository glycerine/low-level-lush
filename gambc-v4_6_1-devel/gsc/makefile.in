# makefile for Gambit-C compiler.

# Copyright (c) 1994-2009 by Marc Feeley, All Rights Reserved.

herefromroot = gsc
rootfromhere = ..
SUBDIRS =

PACKAGE_SHORTNAME = @PACKAGE_SHORTNAME@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_TARNAME = @PACKAGE_TARNAME@

@SET_MAKE@

srcdir = @srcdir@
VPATH = @srcdir@
srcdirpfx = @srcdirpfx@

C_COMPILER = @C_COMPILER_MF@
C_PREPROC = @C_PREPROC_MF@
FLAGS_OBJ = @FLAGS_OBJ_MF@
FLAGS_DYN = @FLAGS_DYN_MF@
FLAGS_LIB = @FLAGS_LIB_MF@
FLAGS_EXE = @FLAGS_EXE_MF@
DEFS = @DEFS@
LIBS = @LIBS@

GAMBCLIB_DEFS = @GAMBCLIB_DEFS_MF@
LIB_PREFIX = @LIB_PREFIX@
LIB_EXTENSION = @LIB_EXTENSION@
GAMBCLIB = @GAMBCLIB@
GAMBCGSCLIB = @GAMBCGSCLIB@
GAMBCGSILIB = @GAMBCGSILIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_LIB = @INSTALL_LIB@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
LN_S = @LN_S@
RANLIB = @RANLIB@
RC = @RC@
GIT = @GIT@
HG = @HG@

prefix = @prefix@
exec_prefix = @exec_prefix@
includedir = @includedir@
libdir = @libdir@
bindir = @bindir@
docdir = @docdir@
infodir = @infodir@
emacsdir = @emacsdir@
libexecdir = @libexecdir@
datarootdir = @datarootdir@
datadir = @datadir@
htmldir = @htmldir@
dvidir = @dvidir@
pdfdir = @pdfdir@
psdir = @psdir@
localedir = @localedir@
mandir = @mandir@

.SUFFIXES:
.SUFFIXES: .scm .c @obj@

LIBRARIES_SCM =

LIBRARY = $(LIB_PREFIX)$(GAMBCGSCLIB)$(LIB_EXTENSION)
LIBRARY_NORMAL_C =
LIBRARY_NORMAL_CPP =
LIBRARY_NORMAL_H =
LIBRARY_NORMAL_O =
LIBRARY_NORMAL_O_PLUS =
LIBRARY_NORMAL_O_COMMA =
LIBRARY_NORMAL_SOURCES = $(LIBRARY_NORMAL_C) $(LIBRARY_NORMAL_CPP) \
$(LIBRARY_NORMAL_H)
LIBRARY_MODULES = _host _utils _source _parms \
_env _ptree1 _ptree2 _gvm _back _front _prims \
_t-c-1 _t-c-2 _t-c-3 _gsclib
LIBRARY_MODULES_SCM = _host.scm _utils.scm _source.scm _parms.scm \
_env.scm _ptree1.scm _ptree2.scm _gvm.scm _back.scm _front.scm _prims.scm \
_t-c-1.scm _t-c-2.scm _t-c-3.scm _gsclib.scm
LIBRARY_MODULES_C = _host.c _utils.c _source.c _parms.c \
_env.c _ptree1.c _ptree2.c _gvm.c _back.c _front.c \
_prims.c _t-c-1.c _t-c-2.c _t-c-3.c _gsclib.c
LIBRARY_MODULES_O = _host@obj@ _utils@obj@ _source@obj@ _parms@obj@ \
_env@obj@ _ptree1@obj@ _ptree2@obj@ _gvm@obj@ _back@obj@ _front@obj@ \
_prims@obj@ _t-c-1@obj@ _t-c-2@obj@ _t-c-3@obj@ _gsclib@obj@
LIBRARY_MODULES_O_PLUS = +_host@obj@ +_utils@obj@ +_source@obj@ +_parms@obj@ \
+_env@obj@ +_ptree1@obj@ +_ptree2@obj@ +_gvm@obj@ +_back@obj@ +_front@obj@ \
+_prims@obj@ +_t-c-1@obj@ +_t-c-2@obj@ +_t-c-3@obj@ +_gsclib@obj@
LIBRARY_MODULES_O_COMMA = _host@obj@,_utils@obj@,_source@obj@,_parms@obj@,\
_env@obj@,_ptree1@obj@,_ptree2@obj@,_gvm@obj@,_back@obj@,_front@obj@,\
_prims@obj@,_t-c-1@obj@,_t-c-2@obj@,_t-c-3@obj@,_gsclib@obj@
LIBRARY_MODULES_O_IN_COMPILE_ORDER = _t-c-2@obj@ _ptree1@obj@ _ptree2@obj@ \
_front@obj@ _t-c-1@obj@ _gvm@obj@ _source@obj@ _t-c-3@obj@ _utils@obj@ \
_parms@obj@ _host@obj@ _env@obj@ _prims@obj@ _back@obj@ _gsclib@obj@
LIBRARY_OBJECTS = $(LIBRARY_NORMAL_O) \
$(LIBRARY_MODULES_O) _$(GAMBCGSCLIB)@obj@
LIBRARY_OBJECTS_PLUS = $(LIBRARY_NORMAL_O_PLUS) \
$(LIBRARY_MODULES_O_PLUS) +_$(GAMBCGSCLIB)@obj@
LIBRARY_OBJECTS_COMMA = $(LIBRARY_NORMAL_O_COMMA),\
$(LIBRARY_MODULES_O_COMMA),_$(GAMBCGSCLIB)@obj@
LIBRARY_OBJECTS_IN_COMPILE_ORDER = $(LIBRARY_MODULES_O_IN_COMPILE_ORDER) \
$(LIBRARY_NORMAL_O_IN_COMPILE_ORDER) _$(GAMBCGSCLIB)@obj@

MAKE_LIBRARY_LIBS = $(rootfromhere)/lib/$(LIB_PREFIX)$(GAMBCLIB)$(LIB_EXTENSION)
MAKE_LIBRARY_FOR_INSTALL_LIBS = @MAKE_LIBRARY_FOR_INSTALL_LIBS@

EXECUTABLE = gsc@exe@
EXECUTABLE_INSTALLED = @ENABLE_COMPILER_NAME@@exe@
EXECUTABLE_NORMAL_C =
EXECUTABLE_NORMAL_CPP =
EXECUTABLE_NORMAL_H =
EXECUTABLE_NORMAL_O =
EXECUTABLE_NORMAL_O_PLUS =
EXECUTABLE_NORMAL_O_COMMA =
EXECUTABLE_NORMAL_SOURCES = $(EXECUTABLE_NORMAL_C) $(EXECUTABLE_NORMAL_CPP) \
$(EXECUTABLE_NORMAL_H)
EXECUTABLE_MODULES = _gsc
EXECUTABLE_MODULES_SCM = _gsc.scm
EXECUTABLE_MODULES_C = _gsc.c
EXECUTABLE_MODULES_O = _gsc@obj@
EXECUTABLE_MODULES_O_PLUS = +_gsc@obj@
EXECUTABLE_MODULES_O_COMMA = _gsc@obj@
EXECUTABLE_MODULES_O_IN_COMPILE_ORDER = _gsc@obj@
EXECUTABLE_OBJECTS = $(EXECUTABLE_NORMAL_O) \
$(EXECUTABLE_MODULES_O) _gsc_@obj@
EXECUTABLE_OBJECTS_PLUS = $(EXECUTABLE_NORMAL_O_PLUS) \
$(EXECUTABLE_MODULES_O_PLUS) +_gsc_@obj@
EXECUTABLE_OBJECTS_COMMA = $(EXECUTABLE_NORMAL_O_COMMA),\
$(EXECUTABLE_MODULES_O_COMMA),_gsc_@obj@
EXECUTABLE_OBJECTS_IN_COMPILE_ORDER = $(EXECUTABLE_MODULES_O_IN_COMPILE_ORDER) \
$(EXECUTABLE_NORMAL_O_IN_COMPILE_ORDER) _gsc_@obj@

LINK_LIBS = $(LIBRARY) $(rootfromhere)/lib/$(LIB_PREFIX)$(GAMBCLIB)$(LIB_EXTENSION)
LINK_FOR_INSTALL_LIBS = @LINK_FOR_INSTALL_GSC_LIBS@

MODULES_SCM = $(LIBRARY_MODULES_SCM) $(EXECUTABLE_MODULES_SCM)
MODULES_C = $(LIBRARY_MODULES_C) $(EXECUTABLE_MODULES_C)
OBJECTS = $(LIBRARY_OBJECTS) $(EXECUTABLE_OBJECTS)

RCFILES = makefile.in fixnum.scm generic.scm igsc.scm $(MODULES_SCM) \
_envadt.scm _gvmadt.scm _ptreeadt.scm _sourceadt.scm

GENDISTFILES = $(MODULES_C) _$(GAMBCGSCLIB).c _gsc_.c

DISTFILES = $(RCFILES) $(GENDISTFILES)

GAMBCDIR_INCLUDE = $(srcdirpfx)$(rootfromhere)/include
GAMBCDIR_LIB = $(srcdirpfx)$(rootfromhere)/lib
GAMBCDIR_LIB_GSI = $(srcdirpfx)$(rootfromhere)/gsi
GAMBCDIR_LIB_GSC = $(srcdirpfx)$(rootfromhere)/gsc

BUILD_OBJ_OUTPUT_FILENAME = $*@obj@
BUILD_OBJ_CC_OPTIONS =  -I$(srcdir) $(DEFS)
BUILD_OBJ_INPUT_FILENAMES = $(srcdirpfx)$*.c

BUILD_EXE_OUTPUT_FILENAME = $(EXECUTABLE)
BUILD_EXE_CC_OPTIONS =
BUILD_EXE_LD_OPTIONS_PRELUDE =
BUILD_EXE_INPUT_FILENAMES = $(EXECUTABLE_OBJECTS)
BUILD_EXE_LD_OPTIONS = $(LIBRARY)

all:

all-pre:

all-post: $(LIBRARY) $(EXECUTABLE)

$(LIBRARY): $(LIBRARY_OBJECTS_IN_COMPILE_ORDER)
	rm -f $(LIBRARY)
	@MAKE_LIBRARY@

_$(GAMBCGSCLIB).c: $(LIBRARY_MODULES_C) $(rootfromhere)/lib/_gambc.c
	@SETDLPATH@ $(rootfromhere)/gsc-comp -:~~bin=$(srcdirpfx)$(rootfromhere)/bin,~~lib=$(srcdirpfx)$(rootfromhere)/lib,~~include=$(srcdirpfx)$(rootfromhere)/include -f -link -l $(srcdirpfx)$(rootfromhere)/lib/_gambc -o $@ $(LIBRARY_MODULES_C)

$(EXECUTABLE): $(EXECUTABLE_OBJECTS_IN_COMPILE_ORDER) $(LINK_LIBS)
	@BUILD_EXE@

_gsc_.c: $(EXECUTABLE_MODULES_C) _$(GAMBCGSCLIB).c
	@SETDLPATH@ $(rootfromhere)/gsc-comp -:~~bin=$(srcdirpfx)$(rootfromhere)/bin,~~lib=$(srcdirpfx)$(rootfromhere)/lib,~~include=$(srcdirpfx)$(rootfromhere)/include -f -link -l _$(GAMBCGSCLIB) -o $@ $(EXECUTABLE_MODULES_C)

_gsc@obj@: _gsc.c
	@BUILD_OBJ@

_gsc_@obj@: _gsc_.c
	@BUILD_OBJ@

.c@obj@:
	@BUILD_OBJ@ -D___LIBRARY

.scm.c:
	@SETDLPATH@ $(rootfromhere)/gsc-comp -:~~bin=$(srcdirpfx)$(rootfromhere)/bin,~~lib=$(srcdirpfx)$(rootfromhere)/lib,~~include=$(srcdirpfx)$(rootfromhere)/include -f -c -check $(srcdirpfx)$*.scm

_gsc.c: $(srcdirpfx)$(rootfromhere)/gsi/main.scm

$(MODULES_C): $(srcdirpfx)$(rootfromhere)/lib/header.scm \
$(srcdirpfx)$(rootfromhere)/lib/gambit\#.scm \
$(srcdirpfx)$(rootfromhere)/lib/_gambit\#.scm \
$(srcdirpfx)fixnum.scm $(srcdirpfx)generic.scm

$(MODULES_O): $(srcdirpfx)$(rootfromhere)/include/gambit.h

install-pre:

install-post: all
	c_bindir=$(DESTDIR)$(prefix)/bin; \
	i_bindir=$(DESTDIR)$(bindir); \
	t_bindir=$$i_bindir; \
	c_libdir=$(DESTDIR)$(prefix)/lib; \
	i_libdir=$(DESTDIR)$(libdir); \
	t_libdir=$$i_libdir; \
	$(srcdirpfx)$(rootfromhere)/mkidirs $$i_bindir $$i_libdir; \
	if test "@ENABLE_SYMLINKS@" = "yes"; then \
	  $(srcdirpfx)$(rootfromhere)/mkidirs $$c_bindir $$c_libdir; \
	  t_bindir=$$c_bindir; \
	  t_libdir=$$c_libdir; \
	fi; \
	$(INSTALL_DATA) $(srcdirpfx)_$(GAMBCGSCLIB).c $$t_libdir/_$(GAMBCGSCLIB).c; \
	@MAKE_LIBRARY_FOR_INSTALL@; \
	$(INSTALL_LIB) $(LIBRARY) $$t_libdir/$(LIBRARY); \
	@FIXLIB@ $$t_libdir/$(LIBRARY); \
	@LINK_FOR_INSTALL@; \
	$(INSTALL_PROGRAM) $(EXECUTABLE) $$t_bindir/$(EXECUTABLE_INSTALLED); \
	if test "$$t_libdir" != "$$i_libdir"; then \
	  r_libdir=`$(rootfromhere)/relpath "$$t_libdir" "$$i_libdir" @ENABLE_MULTIPLE_VERSIONS@`; \
	  for file in _$(GAMBCGSCLIB).c $(LIBRARY); do \
	    (cd $$i_libdir && $(LN_S) $$r_libdir$$file $$file); \
	  done; \
	fi; \
	if test "$$t_bindir" != "$$i_bindir"; then \
	  r_bindir=`$(rootfromhere)/relpath "$$t_bindir" "$$i_bindir" @ENABLE_MULTIPLE_VERSIONS@`; \
	  for file in $(EXECUTABLE_INSTALLED); do \
	    (cd $$i_bindir && $(LN_S) $$r_bindir$$file $$file); \
	  done; \
	fi

uninstall-pre:

uninstall-post:
	c_bindir=$(DESTDIR)$(prefix)/bin; \
	i_bindir=$(DESTDIR)$(bindir); \
	t_bindir=$$i_bindir; \
	c_libdir=$(DESTDIR)$(prefix)/lib; \
	i_libdir=$(DESTDIR)$(libdir); \
	t_libdir=$$i_libdir; \
	if test "@ENABLE_SYMLINKS@" = "yes"; then \
	  t_bindir=$$c_bindir; \
	  t_libdir=$$c_libdir; \
	fi; \
	rm -f $$t_libdir/_$(GAMBCGSCLIB).c \
	  $$t_libdir/$(LIBRARY) \
	  $$t_bindir/$(EXECUTABLE_INSTALLED); \
	if test "$$t_libdir" != "$$i_libdir"; then \
	  for file in _$(GAMBCGSCLIB).c $(LIBRARY); do \
	    rm -f $$i_libdir/$$file; \
	  done; \
	fi; \
	if test "$$t_bindir" != "$$i_bindir"; then \
	  for file in $(EXECUTABLE_INSTALLED); do \
	    rm -f $$i_bindir/$$file; \
	  done; \
	fi; \
	rmdir $$t_libdir 2> /dev/null; \
	if test "$$t_libdir" != "$$i_libdir"; then \
	  rmdir $$i_libdir 2> /dev/null; \
	fi; \
	rmdir $$t_bindir 2> /dev/null; \
	if test "$$t_bindir" != "$$i_bindir"; then \
	  rmdir $$i_bindir 2> /dev/null; \
	fi

mostlyclean-pre:

mostlyclean-post:
	rm -f $(OBJECTS) $(LIBRARY) $(EXECUTABLE)

clean-pre: mostlyclean-pre

clean-post: mostlyclean-post
	rm -f *.da *.bb *.bbg *.gcov *.gcno *.gcda

distclean-pre: clean-pre

distclean-post: clean-post

bootclean-pre: distclean-pre

bootclean-post: distclean-post
	rm -f $(MODULES_C) _$(GAMBCGSCLIB).c _gsc_.c

realclean-pre: bootclean-pre

realclean-post: bootclean-post
	rm -f makefile

rc-setup-pre:
	$(RC) add $(RCFILES)

rc-setup-post:

dist-pre dist-devel-pre:
	mkdir $(rootfromhere)/$(PACKAGE_TARNAME)/$(herefromroot)
	chmod 777 $(rootfromhere)/$(PACKAGE_TARNAME)/$(herefromroot)
	@echo "  Copying distribution files:"
	@for file in $(DISTFILES); do \
	  echo "    $(herefromroot)/$$file"; \
	  ln $(srcdirpfx)$$file $(rootfromhere)/$(PACKAGE_TARNAME)/$(herefromroot) 2> /dev/null \
	    || cp -p $(srcdirpfx)$$file $(rootfromhere)/$(PACKAGE_TARNAME)/$(herefromroot); \
	done

dist-post dist-devel-post:

all-recursive install-recursive uninstall-recursive mostlyclean-recursive clean-recursive distclean-recursive bootclean-recursive realclean-recursive rc-setup-recursive dist-recursive dist-devel-recursive:
	@if test -n "$(SUBDIRS)"; then \
	  for subdir in ""$(SUBDIRS); do \
	    target=`echo $@ | sed 's/-recursive//'`; \
	    echo making $$target in $$subdir; \
	    (cd $$subdir && $(MAKE) $$target) || exit 1; \
	  done \
	fi

all: all-post

all-post: all-recursive

all-recursive: all-pre

install: install-post

install-post: install-recursive

install-recursive: install-pre

uninstall: uninstall-post

uninstall-post: uninstall-recursive

uninstall-recursive: uninstall-pre

mostlyclean: mostlyclean-post

mostlyclean-post: mostlyclean-recursive

mostlyclean-recursive: mostlyclean-pre

clean: clean-post

clean-post: clean-recursive

clean-recursive: clean-pre

distclean: distclean-post

distclean-post: distclean-recursive

distclean-recursive: distclean-pre

bootclean: bootclean-post

bootclean-post: bootclean-recursive

bootclean-recursive: bootclean-pre

realclean: realclean-post

realclean-post: realclean-recursive

realclean-recursive: realclean-pre

rc-setup: rc-setup-post

rc-setup-post: rc-setup-recursive

rc-setup-recursive: rc-setup-pre

dist: dist-post

dist-post: dist-recursive

dist-recursive: dist-pre

dist-devel: dist-devel-post

dist-devel-post: dist-devel-recursive

dist-devel-recursive: dist-devel-pre

makefile: makefile.in $(rootfromhere)/config.status
	cd $(rootfromhere) && CONFIG_FILES=$(herefromroot)/$@ CONFIG_HEADERS= ./config.status

# Tell versions [3.59,3.63) of GNU make not to export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
