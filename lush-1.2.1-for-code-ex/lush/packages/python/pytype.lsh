;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "python/python-config")


#? *** pytype

;; dummy function that adds Python C header files in C file
(eval `(de dummy_pytype () ,python-cpheader-cmd ()))

#? * (dummy_pytype)
#? * (pytype_issubtype <o1> <om>)
#? * (pytype_ready <om>)
#? * (pytype_genericalloc <o1> <im>)
#? * (pytype_genericnew <o1> <o2> <om>)
#? * (_pytype_lookup <o1> <om>)

;; ********************************************************


(de PyType_IsSubtype ( o1  om )
    ((-gptr-"PyTypeObject *") o1)  
    ((-gptr-"PyTypeObject *") om)   
    (int  #{  PyType_IsSubtype( $o1   ,$om )  #} ))

(de PyType_Ready ( om )
    ((-gptr-"PyTypeObject *") om)   
    (int  #{  PyType_Ready( $om )  #} ))

(de PyType_GenericAlloc ( o1  im )
    ((-gptr-"PyTypeObject *") o1)  
    ((-int-) im)   
    (gptr  #{  PyType_GenericAlloc( $o1   ,$im )  #} ))        ;; PyObject * -> gptr

(de PyType_GenericNew ( o1  o2  om )
    ((-gptr-"PyTypeObject *") o1)  
    ((-gptr-"PyObject *") o2)  
    ((-gptr-"PyObject *") om)   
    (gptr  #{  PyType_GenericNew( $o1   ,$o2   ,$om )  #} ))        ;; PyObject * -> gptr

(de _PyType_Lookup ( o1  om )
    ((-gptr-"PyTypeObject *") o1)  
    ((-gptr-"PyObject *") om)   
    (gptr  #{ _PyType_Lookup( $o1   ,$om )  #} ))        ;; PyObject * -> gptr

()
;; ********************************************************

(dhc-make () 
  dummy_pytype
  pytype_issubtype
  pytype_ready
  pytype_genericalloc
  pytype_genericnew
  _pytype_lookup
)
