;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "python/python-config")


#? *** pycomplex

;; dummy function that adds Python C header files in C file
(eval `(de dummy_pycomplex () ,python-cpheader-cmd ()))

#? * (dummy_pycomplex)
#? * (pycomplex_fromccomplex <s>)
#? * (pycomplex_fromdoubles <real> <imag>)
#? * (pycomplex_realasdouble <op>)
#? * (pycomplex_imagasdouble <op>)
#? * (pycomplex_asccomplex <op> <result>)
#? * (_py_c_sum <s> <p> <result>)
#? * (_py_c_diff <s> <p> <result>)
#? * (_py_c_neg <s> <result>)
#? * (_py_c_prod <s> <p> <result>)
#? * (_py_c_quot <s> <p> <result>)
#? * (_py_c_pow <s> <p> <result>)

;; ********************************************************

(de PyComplex_FromCComplex ( s )
    ((-gptr- "Py_complex *") s)   
    (gptr  #{  PyComplex_FromCComplex( *$s )  #} ))        ;; PyObject * -> gptr

(de PyComplex_FromDoubles (  real  imag )
    ((-double-) real)  
    ((-double-) imag)
    (gptr  #{  PyComplex_FromDoubles( $real   ,$imag   )  #} ))        ;; PyObject * -> gptr

(de PyComplex_RealAsDouble ( op )
    ((-gptr-"PyObject *") op)  
    (double  #{ PyComplex_RealAsDouble(  $op )  #} ))

(de PyComplex_ImagAsDouble (  op )
    ((-gptr-"PyObject *") op)
    (double  #{  PyComplex_ImagAsDouble(  $op ) #} ))

(de PyComplex_AsCComplex (  op result)
    ((-gptr-"PyObject *") op)   
    ((-gptr-"Py_complex *") result)
    #{ {
    Py_complex tmp;
    tmp = PyComplex_AsCComplex( $op );
    memcpy($result,&tmp, sizeof(Py_complex));
    } #} 
    ())

(de _Py_c_sum ( s p result)
    ((-gptr- "Py_complex *") s p result)
    #{{
    Py_complex tmp;
    tmp = c_sum( *$s, *$p);
    memcpy($result,&tmp, sizeof(Py_complex)); 
    } #} 
    ())

(de _Py_c_diff ( s p result)
    ((-gptr- "Py_complex *") s p result)
    #{{
    Py_complex tmp;
    tmp = c_diff( *$s, *$p);
    memcpy($result,&tmp, sizeof(Py_complex)); 
    } #} 
    ())

(de _Py_c_neg ( s result)
    ((-gptr- "Py_complex *") s result)
    #{{
    Py_complex tmp;
    tmp = c_neg( *$s );
    memcpy($result,&tmp, sizeof(Py_complex)); 
    } #} 
    ())

(de _Py_c_prod ( s p result)
    ((-gptr- "Py_complex *") s p result)
    #{{
    Py_complex tmp;
    tmp = c_prod( *$s, *$p);
    memcpy($result,&tmp, sizeof(Py_complex)); 
    } #} 
    ())

(de _Py_c_quot ( s p result)
    ((-gptr- "Py_complex *") s p result)
    #{{
    Py_complex tmp;
    tmp = c_quot( *$s, *$p);
    memcpy($result,&tmp, sizeof(Py_complex)); 
    } #} 
    ())

(de _Py_c_pow ( s p result)
    ((-gptr- "Py_complex *") s p result)
    #{{
    Py_complex tmp;
    tmp = c_pow( *$s, *$p);
    memcpy($result,&tmp, sizeof(Py_complex)); 
    } #} 
    ())

;; ********************************************************

(dhc-make () 
  dummy_pycomplex
  pycomplex_fromccomplex
  pycomplex_fromdoubles
  pycomplex_realasdouble
  pycomplex_imagasdouble
  pycomplex_asccomplex
  _py_c_sum
  _py_c_diff
  _py_c_neg
  _py_c_prod
  _py_c_quot
  _py_c_pow
)
