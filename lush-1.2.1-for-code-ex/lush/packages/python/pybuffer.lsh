;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "python/python-config")


#? *** pybuffer

;; dummy function that adds Python C header files in C file
(eval `(de dummy_pybuffer () ,python-cpheader-cmd ()))

#? * (dummy_pybuffer)
#? * (pybuffer_fromobject <base> <offset> <size>)
#? * (pybuffer_fromreadwriteobject <base> <offset> <size>)
#? * (pybuffer_frommemory <s> <size>)
#? * (pybuffer_fromreadwritememory <s> <size>)
#? * (pybuffer_new <size>)

;; ********************************************************

(de PyBuffer_FromObject (base  offset  size )
    ((-gptr-"PyObject *") base)  
    ((-int-) offset)  
    ((-int-) size)   
    (gptr  #{  PyBuffer_FromObject(   $base   ,$offset   ,$size )  #} ))        ;; PyObject * -> gptr

(de PyBuffer_FromReadWriteObject (base  offset  size )
    ((-gptr-"PyObject *") base)  
    ((-int-) offset)  
    ((-int-) size)   
    (gptr  #{  PyBuffer_FromReadWriteObject(   $base   ,$offset   ,$size )  #} ))        ;; PyObject * -> gptr

(de PyBuffer_FromMemory (s  size )
    ((-gptr-"void *") s)  
    ((-int-) size)   
    (gptr  #{  PyBuffer_FromMemory(   $s   ,$size )  #} ))        ;; PyObject * -> gptr

(de PyBuffer_FromReadWriteMemory (s  size )
    ((-gptr-"void *") s)  
    ((-int-) size)   
    (gptr  #{  PyBuffer_FromReadWriteMemory(   $s   ,$size )  #} ))        ;; PyObject * -> gptr

(de PyBuffer_New (size )
    ((-int-) size)   
    (gptr  #{  PyBuffer_New(   $size )  #} ))        ;; PyObject * -> gptr


()
;; ********************************************************

(dhc-make () 
  dummy_pybuffer
  pybuffer_fromobject
  pybuffer_fromreadwriteobject
  pybuffer_frommemory
  pybuffer_fromreadwritememory
  pybuffer_new
)
