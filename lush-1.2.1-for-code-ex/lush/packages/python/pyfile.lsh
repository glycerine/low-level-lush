;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "python/python-config")


#? *** pyfile

;; dummy function that adds Python C header files in C file
(eval `(de dummy_pyfile () ,python-cpheader-cmd ()))

#? * (dummy_pyfile)
#? * (pyfile_fromstring <o1> <om>)
#? * (pyfile_setbufsize <o1> <im>)
#? * (pyfile_fromfile <o1> <o2> <s> <p>)
#? * (pyfile_asfile <om>)
#? * (pyfile_name <om>)
#? * (pyfile_getline <o1> <im>)
#? * (pyfile_writeobject <o1> <o2> <im>)
#? * (pyfile_softspace <o1> <im>)
#? * (pyfile_writestring <o1> <om>)

;; ********************************************************

(de PyFile_FromString ( o1  om )
    ((-str-) o1)  
    ((-str-) om)   
    (gptr  #{  PyFile_FromString( $o1->data ,$om->data )  #} ))        ;; PyObject * -> gptr

(de PyFile_SetBufSize ( o1  im )
    ((-gptr-"PyObject *") o1)  
    ((-int-) im)   
    #{  PyFile_SetBufSize( $o1   ,$im );  #} 
    ())

(de PyFile_FromFile ( o1  o2  s  p )
    ((-gptr-"FILE *") o1)  
    ((-str-) o2)  
    ((-str-) s)  
    ((-gptr-) p)   
    (gptr  #{  PyFile_FromFile( $o1 ,$o2->data ,$s->data ,$p)  #} ))        ;; PyObject * -> gptr

(de PyFile_AsFile ( om )
    ((-gptr-"PyObject *") om)   
    (gptr  #{  PyFile_AsFile( $om )  #} ))   ;; FILE * -> gptr

(de PyFile_Name ( om )
    ((-gptr-"PyObject *") om)   
    (gptr  #{  PyFile_Name( $om )  #} ))        ;; PyObject * -> gptr

(de PyFile_GetLine ( o1  im )
    ((-gptr-"PyObject *") o1)  
    ((-int-) im)   
    (gptr  #{  PyFile_GetLine( $o1   ,$im )  #} ))        ;; PyObject * -> gptr

(de PyFile_WriteObject ( o1  o2  im )
    ((-gptr-"PyObject *") o1)  
    ((-gptr-"PyObject *") o2)  
    ((-int-) im)   
    (int  #{  PyFile_WriteObject( $o1   ,$o2   ,$im )  #} ))

(de PyFile_SoftSpace ( o1  im )
    ((-gptr-"PyObject *") o1)  
    ((-int-) im)   
    (int  #{  PyFile_SoftSpace( $o1   ,$im )  #} ))

(de PyFile_WriteString ( o1  om )
    ((-str-) o1)  
    ((-gptr-"PyObject *") om)   
    (int  #{  PyFile_WriteString( (const char *)$o1->data ,$om )  #} ))

;; ********************************************************

(dhc-make () 
  dummy_pyfile
  pyfile_fromstring
  pyfile_setbufsize
  pyfile_fromfile
  pyfile_asfile
  pyfile_name
  pyfile_getline
  pyfile_writeobject
  pyfile_softspace
  pyfile_writestring
)
