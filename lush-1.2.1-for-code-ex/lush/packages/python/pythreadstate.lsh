;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "python/python-config")


#? *** pythreadstate

;; dummy function that adds Python C header files in C file
(eval `(de dummy_pythreadstate () ,python-cpheader-cmd ()))

#? * (dummy_pythreadstate)
#? * (pythreadstate_new <om>)
#? * (pythreadstate_clear <om>)
#? * (pythreadstate_delete <om>)
#? * (pythreadstate_deletecurrent)
#? * (pythreadstate_get)
#? * (pythreadstate_swap <om>)
#? * (pythreadstate_getdict)

;; ********************************************************

(de PyThreadState_New ( om )
    ((-gptr-"PyInterpreterState *") om)   
    (gptr  #{  PyThreadState_New( $om )  #} ))   ;; PyThreadState * -> gptr

(de PyThreadState_Clear ( om )
    ((-gptr-"PyThreadState *") om)   
    #{  PyThreadState_Clear( $om );  #} 
    ())

(de PyThreadState_Delete ( om )
    ((-gptr-"PyThreadState *") om)   
    #{  PyThreadState_Delete( $om );  #} 
    ())

(de PyThreadState_DeleteCurrent ()
    #{ PyThreadState_DeleteCurrent(  );  #} 
    ())

(de PyThreadState_Get ()
    (gptr  #{  PyThreadState_Get(  )  #} ))   ;; PyThreadState * -> gptr

(de PyThreadState_Swap ( om )
    ((-gptr-"PyThreadState *") om)   
    (gptr  #{  PyThreadState_Swap( $om )  #} ))   ;; PyThreadState * -> gptr

(de PyThreadState_GetDict ()
    (gptr  #{  PyThreadState_GetDict(  )  #} ))        ;; PyObject * -> gptr


()
;; ********************************************************

(dhc-make () 
  dummy_pythreadstate
  pythreadstate_new
  pythreadstate_clear
  pythreadstate_delete
  pythreadstate_deletecurrent
  pythreadstate_get
  pythreadstate_swap
  pythreadstate_getdict
)
