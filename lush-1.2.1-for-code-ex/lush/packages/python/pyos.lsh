;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "python/python-config")


#? *** pyos

;; dummy function that adds Python C header files in C file
(eval `(de dummy_pyos () ,python-cpheader-cmd ()))

#? * (dummy_pyos)
#? * (pyos_strtoul <o1> <o2> <im>)
#? * (pyos_strtol <o1> <o2> <im>)
#? * (pyos_interruptoccurred)
#? * (pyos_initinterrupts)
#? * (pyos_afterfork)
#? * (pyos_finiinterrupts)
#? * (pyos_readline <om>)
#? * (pyos_checkstack)
#? * (pyos_getsig <im>)
#? * (pyos_setsig <s> <p>)

;; ********************************************************


(de PyOS_strtoul ( o1  o2  im )
    ((-str-) o1)  
    ((-gptr-"char **") o2)  
    ((-int-) im)   
    (int  #{  PyOS_strtoul( $o1->data ,$o2   ,$im )  #} ))  ;; unsigned long -> int

(de PyOS_strtol ( o1  o2  im )
    ((-str-) o1)  
    ((-gptr-"char **") o2)  
    ((-int-) im)   
    (int  #{  PyOS_strtol( $o1->data ,$o2   ,$im )  #} ))  ;; long -> int

(de PyOS_InterruptOccurred ()
    (int  #{  PyOS_InterruptOccurred(  )  #} ))

(de PyOS_InitInterrupts ()
    #{ PyOS_InitInterrupts(  );  #} 
    ())

(de PyOS_AfterFork ()
    #{ PyOS_AfterFork(  );  #} 
    ())


(de PyOS_FiniInterrupts ()
    #{ PyOS_FiniInterrupts(  );  #} 
    ())

(de PyOS_Readline ( om )
    ((-str-) om)   
    (gptr  #{  PyOS_Readline( $om->data )  #} ))   ;; char * -> gptr

(de PyOS_CheckStack ()
    (int  #{  PyOS_CheckStack(  )  #} ))

(de PyOS_getsig ( im )
    ((-int-) im)   
    (gptr  #{  PyOS_getsig( $im )  #} ))         ;; PyOS_sighandler_t -> gptr

(de PyOS_setsig ( s  p )
    ((-int-) s)  
    ((-gptr-) p)   
    (gptr  #{  PyOS_setsig( $s   ,$p )  #} ))    ;; PyOS_sighandler_t -> gptr


()
;; ********************************************************

(dhc-make () 
  dummy_pyos
  pyos_strtoul
  pyos_strtol
  pyos_interruptoccurred
  pyos_initinterrupts
  pyos_afterfork
  pyos_finiinterrupts
  pyos_readline
;;  pyos_checkstack
  pyos_getsig
  pyos_setsig
)
