;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; LUSH Lisp Universal Shell
;;;   Copyright (C) 2002 Leon Bottou, Yann Le Cun, AT&T Corp, NECI.
;;; Includes parts of TL3:
;;;   Copyright (C) 1987-1999 Leon Bottou and Neuristique.
;;; Includes selected parts of SN3.2:
;;;   Copyright (C) 1991-2001 AT&T Corp.
;;;
;;; Includes information derived from the GSL (Gnu Scientific Library)
;;;   header files which are copyrighted and distributed under the GPL
;;;   by their respective authors.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program; if not, write to the Free Software
;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(libload "python/python-config")


#? *** pymodule

;; dummy function that adds Python C header files in C file
(eval `(de dummy_pymodule () ,python-cpheader-cmd ()))

#? * (dummy_pymodule)
#? * (pymodule_new <om>)
#? * (pymodule_getdict <om>)
#? * (pymodule_getname <om>)
#? * (pymodule_getfilename <om>)
#? * (_pymodule_clear <om>)
#? * (pymodule_addobject <o1> <o2> <om>)
#? * (pymodule_addintconstant <o1> <o2> <s>)
#? * (pymodule_addstringconstant <o1> <o2> <om>)

;; ********************************************************


(de PyModule_New ( om )
    ((-str-) om)   
    (gptr  #{  PyModule_New( $om->data )  #} ))        ;; PyObject * -> gptr

(de PyModule_GetDict ( om )
    ((-gptr-"PyObject *") om)   
    (gptr  #{  PyModule_GetDict( $om )  #} ))        ;; PyObject * -> gptr

(de PyModule_GetName ( om )
    ((-gptr-"PyObject *") om)   
    (gptr  #{  PyModule_GetName( $om )  #} ))   ;; char * -> gptr

(de PyModule_GetFilename ( om )
    ((-gptr-"PyObject *") om)   
    (gptr  #{  PyModule_GetFilename( $om )  #} ))   ;; char * -> gptr

(de _PyModule_Clear ( om )
    ((-gptr-"PyObject *") om)   
    #{ _PyModule_Clear( $om );  #} 
    ())


(de PyModule_AddObject ( o1  o2  om )
    ((-gptr-"PyObject *") o1)  
    ((-str-) o2)  
    ((-gptr-"PyObject *") om)   
    (int  #{  PyModule_AddObject( $o1 ,$o2->data ,$om )  #} ))

(de PyModule_AddIntConstant ( o1  o2  s )
    ((-gptr-"PyObject *") o1)  
    ((-str-) o2)  
    ((-int-) s)    ;; long -> int
    (int  #{  PyModule_AddIntConstant( $o1   ,$o2->data  ,$s )  #} ))

(de PyModule_AddStringConstant ( o1  o2  om )
    ((-gptr-"PyObject *") o1)  
    ((-str-) o2)  
    ((-str-) om)   
    (int  #{  PyModule_AddStringConstant( $o1 ,$o2->data ,$om->data )  #} ))


;; ********************************************************

(dhc-make () 
  dummy_pymodule
  pymodule_new
  pymodule_getdict
  pymodule_getname
  pymodule_getfilename
  _pymodule_clear
  pymodule_addobject
  pymodule_addintconstant
  pymodule_addstringconstant
)
